<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.tw.saas.serv.mapper.org.OrgPayConfigMapper">
  <resultMap id="BaseResultMap" type="cn.com.tw.saas.serv.entity.org.OrgPayConfig">
    <id column="pay_config_id" jdbcType="VARCHAR" property="payConfigId" />
    <result column="pay_org_id" jdbcType="VARCHAR" property="payOrgId" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="pay_config_json" jdbcType="VARCHAR" property="payConfigJson" />
    <result column="config_status" jdbcType="TINYINT" property="configStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    pay_config_id, pay_org_id, pay_type, pay_config_json, config_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_saas_org_pay_config
    where pay_config_id = #{payConfigId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByEntity" parameterType="cn.com.tw.saas.serv.entity.org.OrgPayConfig" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_saas_org_pay_config
    where 1=1 
       <if test="payOrgId != null">
        and pay_org_id = #{payOrgId,jdbcType=VARCHAR}
      </if>
      <if test="payType != null">
        and pay_type = #{payType,jdbcType=VARCHAR}
      </if>
      <if test="configStatus != null">
        and config_status = #{configStatus,jdbcType=TINYINT}
      </if>
  </select>
  
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_saas_org_pay_config
    where pay_config_id = #{payConfigId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.tw.saas.serv.entity.org.OrgPayConfig">
    insert into t_saas_org_pay_config (pay_config_id, pay_org_id, pay_type, 
      pay_config_json, config_status)
    values (#{payConfigId,jdbcType=VARCHAR}, #{payOrgId,jdbcType=VARCHAR}, #{payType,jdbcType=VARCHAR}, 
      #{payConfigJson,jdbcType=VARCHAR}, #{configStatus,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.tw.saas.serv.entity.org.OrgPayConfig">
    insert into t_saas_org_pay_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payConfigId != null">
        pay_config_id,
      </if>
      <if test="payOrgId != null">
        pay_org_id,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payConfigJson != null">
        pay_config_json,
      </if>
      <if test="configStatus != null">
        config_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payConfigId != null">
        #{payConfigId,jdbcType=VARCHAR},
      </if>
      <if test="payOrgId != null">
        #{payOrgId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payConfigJson != null">
        #{payConfigJson,jdbcType=VARCHAR},
      </if>
      <if test="configStatus != null">
        #{configStatus,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.tw.saas.serv.entity.org.OrgPayConfig">
    update t_saas_org_pay_config
    <set>
      <if test="payOrgId != null">
        pay_org_id = #{payOrgId,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="payConfigJson != null">
        pay_config_json = #{payConfigJson,jdbcType=VARCHAR},
      </if>
      <if test="configStatus != null">
        config_status = #{configStatus,jdbcType=TINYINT},
      </if>
    </set>
    where pay_config_id = #{payConfigId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.tw.saas.serv.entity.org.OrgPayConfig">
    update t_saas_org_pay_config
    set pay_org_id = #{payOrgId,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=VARCHAR},
      pay_config_json = #{payConfigJson,jdbcType=VARCHAR},
      config_status = #{configStatus,jdbcType=TINYINT}
    where pay_config_id = #{payConfigId,jdbcType=VARCHAR}
  </update>
</mapper>