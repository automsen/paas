<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.tw.saas.serv.mapper.org.OrgUserMapper" >
  <resultMap id="BaseResultMap" type="cn.com.tw.saas.serv.entity.org.OrgUser" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="org_name" property="orgName" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_role" property="userRole" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="is_usable" property="isUsable" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="user_real_name" property="userRealName" jdbcType="VARCHAR" />
    <result column="org_role_name" property="orgRoleName" jdbcType="VARCHAR" />
    <result column="roles" property="roles" jdbcType="VARCHAR" />
    <result column="org_website" property="orgWebsite" jdbcType="VARCHAR" />
    <result column="org_logo" property="orgLogo" jdbcType="VARCHAR" />
    <result column="is_verification" property="isVerification" jdbcType="TINYINT"/>
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, org_id, user_name, user_role, password, mobile, 
    email, is_usable, create_time, update_time, user_real_name, is_verification
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_saas_org_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_saas_org_user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  
  <select id="selectByOrgId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_saas_org_user
    where org_id = #{orgId,jdbcType=VARCHAR} AND LENGTH(user_id)  &lt; 8
  </select>
  
  
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="cn.com.tw.common.web.entity.page.Page">
    SELECT
		u.*,
	    GROUP_CONCAT(r.role_name) AS org_role_name
	FROM
		t_saas_org_user u
	LEFT JOIN t_saas_org_user_role ur ON ur.user_id = u.user_id
	LEFT JOIN t_saas_org_role r on r.role_id = ur.role_id
    where 1=1 AND u.user_name != 'admin'
    	  <if test="paramObj.orgId != null" >
	        and u.org_id = #{paramObj.orgId,jdbcType=VARCHAR}
	      </if>
	      <if test="paramObj.userName != null and paramObj.userName != '' " >
	        and u.user_name  like concat ('%',#{paramObj.userName,jdbcType=VARCHAR},'%')
	      </if>
	      <if test="paramObj.userRole != null and paramObj.userRole != ''" >
	        and u.user_role = #{paramObj.userRole,jdbcType=VARCHAR}
	      </if>
	      <if test="paramObj.password != null and paramObj.password != ''" >
	        and u.password = #{paramObj.password,jdbcType=VARCHAR}
	      </if>
	      <if test="paramObj.mobile != null and paramObj.mobile != ''" >
	        and u.mobile = #{paramObj.mobile,jdbcType=VARCHAR}
	      </if>
	      <if test="paramObj.email != null and paramObj.email != ''" >
	        and u.email = #{paramObj.email,jdbcType=VARCHAR}
	      </if>
	      <if test="paramObj.isUsable != null" >
	        and u.is_usable = #{paramObj.isUsable,jdbcType=TINYINT}
	      </if>
	    GROUP BY u.user_id
		ORDER BY u.create_time DESC
  </select>
  
  
  <select id="selectByEntity" resultMap="BaseResultMap" parameterType="cn.com.tw.saas.serv.entity.org.OrgUser">
    select 
    <include refid="Base_Column_List" />
    from t_saas_org_user u
    where 1=1 
    	  <if test="orgId != null" >
	        and u.org_id = #{orgId,jdbcType=VARCHAR}
	      </if>
	      <if test="userName != null and userName != '' " >
	        and u.user_name  = #{userName,jdbcType=VARCHAR}
	      </if>
	      <if test="userRole != null and userRole != ''" >
	        and u.user_role = #{userRole,jdbcType=VARCHAR}
	      </if>
	      <if test="password != null and password != ''" >
	        and u.password = #{password,jdbcType=VARCHAR}
	      </if>
	      <if test="mobile != null and mobile != ''" >
	        and u.mobile = #{mobile,jdbcType=VARCHAR}
	      </if>
	      <if test="email != null and email != ''" >
	        and u.email = #{email,jdbcType=VARCHAR}
	      </if>
	      <if test="isUsable != null" >
	        and u.is_usable = #{isUsable,jdbcType=TINYINT}
	      </if>
  </select>
  
  
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_saas_org_user
  </select>
  
  
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
		SELECT
			u.user_id,
			u.org_id,
			u.user_name,
			u.user_role,
			u.PASSWORD,
			u.mobile,
			u.email,
			u.is_usable,
			u.create_time,
			u.update_time,
			u.is_verification,
			o.org_name,
			o.org_website,
			o.org_logo,
			(select GROUP_CONCAT(distinct role_code) from t_saas_org_user_role where user_id =u.user_id GROUP BY user_id) roles
		FROM
			t_saas_org_user u
		LEFT JOIN t_saas_org o ON o.org_id = u.org_id
		    where u.user_name = #{userName,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_saas_org_user
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.tw.saas.serv.entity.org.OrgUser" >
    insert into t_saas_org_user (user_id, org_id, user_name, 
      user_role, password, mobile, 
      email, is_usable, create_time, 
      update_time, user_real_name, is_verification),
    values (uuid_short(), #{orgId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userRole,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{isUsable,jdbcType=TINYINT}, now(), now(), #{userRealName,jdbcType=VARCHAR},
      #{isVerification,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.tw.saas.serv.entity.org.OrgUser" >
    insert into t_saas_org_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userRole != null" >
        user_role,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="isUsable != null" >
        is_usable,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="userRealName != null" >
        user_real_name,
      </if>
      <if test="isVerification != null">
      	is_verification,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isUsable != null" >
        #{isUsable,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userRealName != null" >
        #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="isVerification != null">
      	#{isVerification,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.tw.saas.serv.entity.org.OrgUser" >
    update t_saas_org_user
    <set >
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null" >
        user_role = #{userRole,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isUsable != null" >
        is_usable = #{isUsable,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userRealName != null" >
        user_real_name = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="isVerification != null">
      	is_verification = #{isVerification,jdbcType=TINYINT},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.tw.saas.serv.entity.org.OrgUser" >
    update t_saas_org_user
    set org_id = #{orgId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_usable = #{isUsable,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_real_name = #{userRealName,jdbcType=VARCHAR},
      is_verification = #{isVerification,jdbcType=TINYINT}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  
  <select id="selectVerifyByUserName" resultMap="BaseResultMap" parameterType="java.lang.String">
  	SELECT
		user_name,
		mobile,
		is_verification
	FROM
		t_saas_org_user
	WHERE
		user_name = #{userName,jdbcType=VARCHAR}
  </select>
</mapper>