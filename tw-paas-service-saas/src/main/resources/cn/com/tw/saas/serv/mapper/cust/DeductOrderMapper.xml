<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.tw.saas.serv.mapper.cust.DeductOrderMapper" >
    <resultMap id="BaseResultMap" type="cn.com.tw.saas.serv.entity.db.cust.DeductOrder" >
        <id column="order_id" property="orderId" jdbcType="VARCHAR" />
        <result column="org_id" property="orgId" jdbcType="VARCHAR" />
        <result column="room_id" property="roomId" jdbcType="VARCHAR" />
        <result column="room_account_id" property="roomAccountId" jdbcType="VARCHAR" />
        <result column="sub_account_id" property="subAccountId" jdbcType="VARCHAR" />
        <result column="energy_type" property="energyType" jdbcType="VARCHAR" />
        <result column="meter_addr" property="meterAddr" jdbcType="VARCHAR" />
        <result column="deduct_type" property="deductType" jdbcType="VARCHAR" />
        <result column="operator_id" property="operatorId" jdbcType="VARCHAR" />
        <result column="deduct_money" property="deductMoney" jdbcType="DECIMAL" />
        <result column="deduct_time" property="deductTime" jdbcType="TIMESTAMP" />
        <result column="deduct_no" property="deductNo" jdbcType="INTEGER" />
        <result column="price_mode_code" property="priceModeCode" jdbcType="VARCHAR" />
        <result column="price_id" property="priceId" jdbcType="VARCHAR" />
        <result column="is_price_over" property="isPriceOver" jdbcType="TINYINT" />
        <result column="read_value" property="readValue" jdbcType="DECIMAL" />
        <result column="use_value" property="useValue" jdbcType="DECIMAL" />
        <result column="read_value1" property="readValue1" jdbcType="DECIMAL" />
        <result column="read_value2" property="readValue2" jdbcType="DECIMAL" />
        <result column="read_value3" property="readValue3" jdbcType="DECIMAL" />
        <result column="read_value4" property="readValue4" jdbcType="DECIMAL" />
        <result column="step_value1" property="stepValue1" jdbcType="DECIMAL" />
        <result column="step_value2" property="stepValue2" jdbcType="DECIMAL" />
        <result column="step_value3" property="stepValue3" jdbcType="DECIMAL" />
        <result column="step_value4" property="stepValue4" jdbcType="DECIMAL" />
        <result column="use_value1" property="useValue1" jdbcType="DECIMAL" />
        <result column="use_value2" property="useValue2" jdbcType="DECIMAL" />
        <result column="use_value3" property="useValue3" jdbcType="DECIMAL" />
        <result column="use_value4" property="useValue4" jdbcType="DECIMAL" />
        <result column="status" property="status" jdbcType="TINYINT" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List" >
        order_id, org_id, room_id, room_account_id, sub_account_id, energy_type, meter_addr, 
        deduct_type, operator_id, deduct_money, deduct_time, deduct_no, price_mode_code, 
        price_id, is_price_over, read_value, use_value, read_value1, read_value2, read_value3, 
        read_value4, step_value1, step_value2, step_value3, step_value4, use_value1, use_value2, 
        use_value3, use_value4, status, create_time, update_time
    </sql>
    
    <select id="selectByEntity1" resultMap="BaseResultMap" parameterType="cn.com.tw.saas.serv.entity.db.cust.DeductOrder">
		SELECT
			a.org_id,
			a.room_account_id,
			a.sub_account_id,
			a.price_id,
			c.price1  as price,
			e.start_time  as sTime,
			e.end_time as  eTime,
			n.start_read,
			n.balance_update_read
		FROM
			t_saas_cust_deduct_order a
		LEFT JOIN (
			SELECT
				b.org_id,
				b.price1  ,
				b.price_id
			FROM
				t_saas_rule_energy_price b
		) c ON a.price_id = c.price_id
		AND a.org_id = c.org_id
		LEFT JOIN (
			SELECT
				d.org_id,
				d.account_id,
				d.start_time,
				d.end_time
			FROM
				t_saas_room_history d
		) e ON a.room_account_id = e.account_id
		AND a.org_id = e.org_id
		LEFT JOIN (
			SELECT
				m.org_id,
				m.start_read,
				m.balance_update_read,
				m.account_id,
				m.sub_account_id
			FROM
				t_saas_meter_history m
		) n ON n.sub_account_id = a.sub_account_id
		AND n.org_id = a.org_id
		<where>
			<if test="orgId != null and orgId != ''" >
	        	and a.org_id = #{orgId,jdbcType=VARCHAR}
	      	</if>
			<if test="roomAccountId != null and roomAccountId != ''" >
	        	and a.room_account_id = #{roomAccountId,jdbcType=VARCHAR}
	      	</if>
	      	<if test="subAccountId != null and subAccountId != ''" >
	        	and a.sub_account_id = #{subAccountId,jdbcType=VARCHAR}
	      	</if>
	      	<if test="priceId != null and priceId != ''" >
	        	and a.price_id = #{priceId,jdbcType=VARCHAR}
	      	</if>
		</where>
		ORDER BY
			e.start_time DESC  
    </select>
    
    
    
    <select id="selectOneParams" resultType="cn.com.tw.saas.serv.entity.business.cust.DeductOrderParams" 
    parameterType="cn.com.tw.saas.serv.entity.db.cust.DeductOrder">
SELECT
	m.sub_account_id subAccountId,
	m.org_id orgId,
	m.room_id roomId,
	m.account_id roomAccountId,
	m.energy_type energyType,
	m.meter_addr meterAddr,
	m.price_id priceId,
	m.start_time startTime,
	m.start_read startRead,
	last.is_price_over lastIsPriceOver,
	last.read_value lastReadValue,
	last.deduct_time lastDeductTime,
	last.deduct_no deductNo,
	last.read_value1 lastReadValue1,
	last.step_value1 lastStepValue1,
	last.step_value2 lastStepValue2,
	last.step_value3 lastStepValue3,
	last.step_value4 lastStepValue4,
	m.elec_ct * m.elec_pt multiple,
	now.read_value readValue,
	now.read_time deductTime
FROM
	(
		SELECT
			org_id,
			room_id,
			account_id,
			sub_account_id,
			energy_type,
			meter_addr,
			elec_ct,
			elec_pt,
			price_id,
			start_time,
			start_read
		FROM
			t_saas_meter
		WHERE
			meter_addr = #{meterAddr,jdbcType=VARCHAR}
		AND is_cost_control = 0
		AND (sub_account_status = 1 OR sub_account_status = 6)
		AND price_mode_code != '1304'
	) m
LEFT JOIN (
	SELECT
		sub_account_id,
		is_price_over,
		read_value,
		deduct_time,
		deduct_no,
		read_value1,
		step_value1,
		step_value2,
		step_value3,
		step_value4
	FROM
		t_saas_cust_deduct_order
	WHERE
		sub_account_id = #{subAccountId,jdbcType=VARCHAR}
	AND STATUS = 1
	ORDER BY
		create_time DESC
	LIMIT 1
) last ON m.sub_account_id = last.sub_account_id

LEFT JOIN (
	SELECT
		meter_addr,
		read_value,
		read_time
	FROM
		t_read_last
	WHERE
		meter_addr = #{meterAddr,jdbcType=VARCHAR}
	AND (
		item_code = 'waterFlow'
		OR item_code = 'totalActiveE'
	)
) now ON now.meter_addr = m.meter_addr
    </select>
    
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from t_saas_cust_deduct_order
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>

    <insert id="insert" parameterType="cn.com.tw.saas.serv.entity.db.cust.DeductOrder" >
        insert into t_saas_cust_deduct_order (order_id, org_id, room_id, 
            room_account_id, sub_account_id, energy_type, 
            meter_addr, deduct_type, operator_id, 
            deduct_money, deduct_time, deduct_no, 
            price_mode_code, price_id, is_price_over, 
            read_value, use_value, read_value1, 
            read_value2, read_value3, read_value4, 
            step_value1, step_value2, step_value3, 
            step_value4, use_value1, use_value2, 
            use_value3, use_value4, status, 
            create_time, update_time)
        values (uuid_short(), #{orgId,jdbcType=VARCHAR}, #{roomId,jdbcType=VARCHAR}, 
            #{roomAccountId,jdbcType=VARCHAR}, #{subAccountId,jdbcType=VARCHAR}, #{energyType,jdbcType=VARCHAR}, 
            #{meterAddr,jdbcType=VARCHAR}, #{deductType,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, 
            #{deductMoney,jdbcType=DECIMAL}, #{deductTime,jdbcType=TIMESTAMP}, #{deductNo,jdbcType=INTEGER}, 
            #{priceModeCode,jdbcType=VARCHAR}, #{priceId,jdbcType=VARCHAR}, #{isPriceOver,jdbcType=TINYINT}, 
            #{readValue,jdbcType=DECIMAL}, #{useValue,jdbcType=DECIMAL}, #{readValue1,jdbcType=DECIMAL}, 
            #{readValue2,jdbcType=DECIMAL}, #{readValue3,jdbcType=DECIMAL}, #{readValue4,jdbcType=DECIMAL}, 
            #{stepValue1,jdbcType=DECIMAL}, #{stepValue2,jdbcType=DECIMAL}, #{stepValue3,jdbcType=DECIMAL}, 
            #{stepValue4,jdbcType=DECIMAL}, #{useValue1,jdbcType=DECIMAL}, #{useValue2,jdbcType=DECIMAL}, 
            #{useValue3,jdbcType=DECIMAL}, #{useValue4,jdbcType=DECIMAL}, #{status,jdbcType=TINYINT}, 
            now(), now())
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.com.tw.saas.serv.entity.db.cust.DeductOrder" >
        update t_saas_cust_deduct_order
        <set >
            <if test="orgId != null" >
                org_id = #{orgId,jdbcType=VARCHAR},
            </if>
            <if test="roomId != null" >
                room_id = #{roomId,jdbcType=VARCHAR},
            </if>
            <if test="roomAccountId != null" >
                room_account_id = #{roomAccountId,jdbcType=VARCHAR},
            </if>
            <if test="subAccountId != null" >
                sub_account_id = #{subAccountId,jdbcType=VARCHAR},
            </if>
            <if test="energyType != null" >
                energy_type = #{energyType,jdbcType=VARCHAR},
            </if>
            <if test="meterAddr != null" >
                meter_addr = #{meterAddr,jdbcType=VARCHAR},
            </if>
            <if test="deductType != null" >
                deduct_type = #{deductType,jdbcType=VARCHAR},
            </if>
            <if test="operatorId != null" >
                operator_id = #{operatorId,jdbcType=VARCHAR},
            </if>
            <if test="deductMoney != null" >
                deduct_money = #{deductMoney,jdbcType=DECIMAL},
            </if>
            <if test="deductTime != null" >
                deduct_time = #{deductTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deductNo != null" >
                deduct_no = #{deductNo,jdbcType=INTEGER},
            </if>
            <if test="priceModeCode != null" >
                price_mode_code = #{priceModeCode,jdbcType=VARCHAR},
            </if>
            <if test="priceId != null" >
                price_id = #{priceId,jdbcType=VARCHAR},
            </if>
            <if test="isPriceOver != null" >
                is_price_over = #{isPriceOver,jdbcType=TINYINT},
            </if>
            <if test="readValue != null" >
                read_value = #{readValue,jdbcType=DECIMAL},
            </if>
            <if test="useValue != null" >
                use_value = #{useValue,jdbcType=DECIMAL},
            </if>
            <if test="readValue1 != null" >
                read_value1 = #{readValue1,jdbcType=DECIMAL},
            </if>
            <if test="readValue2 != null" >
                read_value2 = #{readValue2,jdbcType=DECIMAL},
            </if>
            <if test="readValue3 != null" >
                read_value3 = #{readValue3,jdbcType=DECIMAL},
            </if>
            <if test="readValue4 != null" >
                read_value4 = #{readValue4,jdbcType=DECIMAL},
            </if>
            <if test="stepValue1 != null" >
                step_value1 = #{stepValue1,jdbcType=DECIMAL},
            </if>
            <if test="stepValue2 != null" >
                step_value2 = #{stepValue2,jdbcType=DECIMAL},
            </if>
            <if test="stepValue3 != null" >
                step_value3 = #{stepValue3,jdbcType=DECIMAL},
            </if>
            <if test="stepValue4 != null" >
                step_value4 = #{stepValue4,jdbcType=DECIMAL},
            </if>
            <if test="useValue1 != null" >
                use_value1 = #{useValue1,jdbcType=DECIMAL},
            </if>
            <if test="useValue2 != null" >
                use_value2 = #{useValue2,jdbcType=DECIMAL},
            </if>
            <if test="useValue3 != null" >
                use_value3 = #{useValue3,jdbcType=DECIMAL},
            </if>
            <if test="useValue4 != null" >
                use_value4 = #{useValue4,jdbcType=DECIMAL},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from t_saas_cust_deduct_order
        where order_id = #{orderId,jdbcType=VARCHAR}
    </delete>

</mapper>