#application server config ------------------start--------------------

#server.config
server.port: 8087

#log config
logging.level.cn.com=DEBUG
logging.file=logs/engine.log  
logging.level=debug

#kafka config
spring.kafka.bootstrap-servers=172.19.179.15:9092

#engine config ----------- start -------------------
#queue category
#参数类， 事件类， 电量类， 谐波变量类，需量类，曲线类 , 报警类**/
#param, event, elec, harm_var, demand, curve, alarm
engine.config.queues[param]=paas.queue.meter.data
engine.config.queues[event]=paas.queue.meter.data
engine.config.queues[elec]=paas.queue.meter.data
engine.config.queues[harm_var]=paas.queue.meter.data
engine.config.queues[demand]=paas.queue.meter.data
engine.config.queues[curve]=paas.queue.meter.data
engine.config.queues[alarm]=paas.queue.device.monit
engine.config.queues[heart]=paas.queue.heartbeat.data

# if mode type is tcp, it will effective
engine.config.elecSendTimeout=12
engine.config.waterSendTimeout=30
engine.config.dtuSendTimeout=30
engine.config.collectSendNum=0

#config engine mode type
#以太网主动连接主动采集 etnet_active_get,
#以太网被动连接主动群组采集 etnet_passive_getByGroup,  
#以太网被动连接主动采集 etnet_passive_get, 
#gprs被动连接主动采集 gprs_passive_get, 
#gprs被动连接被动采集 gprs_passive_rev, 
#wifi被动连接被动接受 wifi_passive_rev, 
#lorawan主动连接主动采集 lorawan_active_get;
#lorawan 阿里平台对接ali_mq_lorawan_get_get
engine.mode=ali_mq_lorawan_get_get

#DLT645V2007，MODBUS
engine.protocol=DLT645V2007

#isSection
engine.gw.isSection=true

#if engine tcp passive receive server config, it will effective. if mode type is active or http, so no effective
engine.tcp.port=6000
engine.tcp.bossThreadCount=2
engine.tcp.workerThreadCount=2
engine.tcp.so.keepalive=true
engine.tcp.so.backlog=100
engine.tcp.server.readTimeout=900
engine.tcp.server.writeTimeout=900
engine.tcp.server.allTimeout=900

#if engine mode type 'lorawan' config
engine.lorawarn.serviceUrl=http://api.easylinkin.com/api/v1/application/downlink
engine.lorawarn.token=shibo123
engine.lorawarn.appeui=2C26C50124842008
engine.lorawarn.payloadType=1
engine.lorawarn.ttl=2h
#lorawan interval time config (u:senconds)
engine.lorawan.cmd.interval.time=8

# every gw down cmd max num
engine.gw.downcmd.allow.maxNum=30

#debug
engine.debuger.switch=1
engine.debuger.tcp.port=7332

#if mode type is 'ali_mq_lorawan_get_get'. config
engine.lorawan.aliyun.accessKeyId=LTAIGaJfyxfve9dz
engine.lorawan.aliyun.accessKeySecret=DY3heS26ajqkffScXXDH6wUiAnk20f 
#engine.lorawan.aliyun.nsaddr=http://onsaddr-internal.aliyun.com:8080/rocketmq/nsaddr4client-internal
engine.lorawan.aliyun.nsaddr=http://onsaddr-internet.aliyun.com/rocketmq/nsaddr4client-internet
#engine.lorawan.aliyun.mqUpName=heat_pumps_up
#engine.lorawan.aliyun.mqDownName=heat_pumps_down
engine.lorawan.aliyun.mqUpName=ALI_LINK_WAN_LORA_UP_PUBLIC
engine.lorawan.aliyun.mqDownName=ALI_LINK_WAN_LORA_DOWN_PUBLIC
engine.lorawan.aliyun.cId=CID_HEAT_UP_PUBLIC
engine.lorawan.aliyun.pId=PID_HEAT_DOWN_PUBLIC

http.proxy.hostname=172.19.152.59
http.proxy.port=8033

#===start cluster mode
engine.cluster=false
#redis config
spring.redis.database=0
spring.redis.host=172.19.179.15
spring.redis.password=
spring.redis.port=6379
spring.redis.timeout=3000
#===end