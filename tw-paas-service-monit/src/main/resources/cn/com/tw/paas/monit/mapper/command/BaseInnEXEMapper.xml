<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.tw.paas.monit.mapper.command.BaseInnEXEMapper" >
  <resultMap id="BaseResultMap" type="cn.com.tw.paas.monit.entity.db.command.BaseInnEXE" >
    <id column="inn_id" property="innId" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="meter_id" property="meterId" jdbcType="VARCHAR" />
    <result column="meter_addr" property="meterAddr" jdbcType="VARCHAR" />
    <result column="cmd_code" property="cmdCode" jdbcType="VARCHAR" />
    <result column="inn_code" property="innCode" jdbcType="VARCHAR" />
    <result column="data_name" property="dataName" jdbcType="VARCHAR" />
    <result column="group_sort" property="groupSort" jdbcType="INTEGER" />
    <result column="use_time" property="useTime" jdbcType="INTEGER" />
    <result column="param" property="param" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="return_value" property="returnValue" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="cmd_id" property="cmdId" jdbcType="VARCHAR" />
    <result column="success_inn" property="successInn" jdbcType="INTEGER" />
    <result column="fail_inn" property="failInn" jdbcType="INTEGER" />
    <result column="timeout_inn" property="timeoutInn" jdbcType="INTEGER" />
    <result column="data_name" property="dataName" jdbcType="VARCHAR" />
    <result column="total_avg" property="totalAvg" jdbcType="INTEGER" />
    <result column="fail_avg" property="timeoutAvg" jdbcType="INTEGER" />
    <result column="timeout_avg" property="timeoutAvg" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    inn_id, org_id, meter_id, meter_addr, cmd_code, inn_code, data_name, group_sort, 
    use_time, param, reason, return_value, status, create_time, update_time, cmd_id
  </sql>
  
  <select id="selectByInnExe" resultMap="BaseResultMap" parameterType="cn.com.tw.paas.monit.entity.db.command.BaseInnEXE" >
	  	  select 
		    <include refid="Base_Column_List" />
		    from t_base_inn_exe
		   where 1=1
	      <if test="cmdId != null" >
	       and cmd_id = #{cmdId,jdbcType=VARCHAR}
	      </if>
	      order by group_sort asc
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_base_inn_exe
    where inn_id = #{innId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_base_inn_exe
    where inn_id = #{innId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.com.tw.paas.monit.entity.db.command.BaseInnEXE" >
    insert into t_base_inn_exe (inn_id, org_id, meter_id, 
      meter_addr, cmd_code, inn_code, 
      data_name, group_sort, use_time, 
      param, reason, return_value, 
      status, create_time, update_time
      )
    values (#{innId,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR}, #{meterId,jdbcType=VARCHAR}, 
      #{meterAddr,jdbcType=VARCHAR}, #{cmdCode,jdbcType=VARCHAR}, #{innCode,jdbcType=VARCHAR}, 
      #{dataName,jdbcType=VARCHAR}, #{groupSort,jdbcType=INTEGER}, #{useTime,jdbcType=INTEGER}, 
      #{param,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, #{returnValue,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.com.tw.paas.monit.entity.db.command.BaseInnEXE" >
    insert into t_base_inn_exe
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="innId != null" >
        inn_id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="meterId != null" >
        meter_id,
      </if>
      <if test="meterAddr != null" >
        meter_addr,
      </if>
      <if test="cmdCode != null" >
        cmd_code,
      </if>
      <if test="innCode != null" >
        inn_code,
      </if>
      <if test="dataName != null" >
        data_name,
      </if>
      <if test="groupSort != null" >
        group_sort,
      </if>
      <if test="useTime != null" >
        use_time,
      </if>
      <if test="param != null" >
        param,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="returnValue != null" >
        return_value,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="cmdId != null" >
        cmd_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="innId != null" >
        #{innId,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="meterId != null" >
        #{meterId,jdbcType=VARCHAR},
      </if>
      <if test="meterAddr != null" >
        #{meterAddr,jdbcType=VARCHAR},
      </if>
      <if test="cmdCode != null" >
        #{cmdCode,jdbcType=VARCHAR},
      </if>
      <if test="innCode != null" >
        #{innCode,jdbcType=VARCHAR},
      </if>
      <if test="dataName != null" >
        #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="groupSort != null" >
        #{groupSort,jdbcType=INTEGER},
      </if>
      <if test="useTime != null" >
        #{useTime,jdbcType=INTEGER},
      </if>
      <if test="param != null" >
        #{param,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="returnValue != null" >
        #{returnValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cmdId != null" >
        #{cmdId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.tw.paas.monit.entity.db.command.BaseInnEXE" >
    update t_base_inn_exe
    <set >
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="meterId != null" >
        meter_id = #{meterId,jdbcType=VARCHAR},
      </if>
      <if test="meterAddr != null" >
        meter_addr = #{meterAddr,jdbcType=VARCHAR},
      </if>
      <if test="cmdCode != null" >
        cmd_code = #{cmdCode,jdbcType=VARCHAR},
      </if>
      <if test="innCode != null" >
        inn_code = #{innCode,jdbcType=VARCHAR},
      </if>
      <if test="dataName != null" >
        data_name = #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="groupSort != null" >
        group_sort = #{groupSort,jdbcType=INTEGER},
      </if>
      <if test="useTime != null" >
        use_time = #{useTime,jdbcType=INTEGER},
      </if>
      <if test="param != null" >
        param = #{param,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="returnValue != null" >
        return_value = #{returnValue,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cmdId != null" >
        cmd_id = #{cmdId,jdbcType=VARCHAR},
      </if>
    </set>
    where inn_id = #{innId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.tw.paas.monit.entity.db.command.BaseInnEXE" >
    update t_base_inn_exe
    set org_id = #{orgId,jdbcType=VARCHAR},
      meter_id = #{meterId,jdbcType=VARCHAR},
      meter_addr = #{meterAddr,jdbcType=VARCHAR},
      cmd_code = #{cmdCode,jdbcType=VARCHAR},
      inn_code = #{innCode,jdbcType=VARCHAR},
      data_name = #{dataName,jdbcType=VARCHAR},
      group_sort = #{groupSort,jdbcType=INTEGER},
      use_time = #{useTime,jdbcType=INTEGER},
      param = #{param,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      return_value = #{returnValue,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
      cmd_id = #{cmdId,jdbcType=VARCHAR},
    where inn_id = #{innId,jdbcType=VARCHAR}
  </update>
  
  <select id="selectInnByStatus" resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT  
			sum(CASE WHEN inn.`status` = 1 THEN 1 ELSE 0 END) success_inn,
			sum(CASE WHEN inn.`status` = 2 THEN 1 ELSE 0 END) fail_inn,
			sum(CASE WHEN inn.`status` = 3 THEN 1 ELSE 0 END) timeout_inn
		FROM
			t_base_inn_exe inn
		<where>
			inn.meter_id = #{meterId,jdbcType=VARCHAR}
		</where>
  </select>
  
  <select id="selectInnAvgByMeterId" resultMap="BaseResultMap" parameterType="java.lang.String">
	  		SELECT
				a.meter_id,
				a.data_name data_name,
				FORMAT(s_avg/1000,2) successAvg,
				FORMAT(f_avg/1000,2) failAvg,
				FORMAT(t_avg/1000,2) timeoutAvg
			FROM
			(SELECT
				cmd_code,
				meter_id,
				data_name,
				AVG(use_time) s_avg
			FROM
				t_base_inn_exe
			WHERE
				`status` = '1'
			GROUP BY
				inn_code
			) a
			left JOIN
			(SELECT
				meter_id,
				data_name,
				AVG(use_time) f_avg
			FROM
				t_base_inn_exe
			WHERE
				`status` = '2'
			GROUP BY
				inn_code
			) b
			ON a.meter_id = b.meter_id 
			LEFT JOIN
			(SELECT
				meter_id,
				data_name,
				AVG(use_time) t_avg
			FROM
				t_base_inn_exe
			WHERE
				`status` = '3'
			GROUP BY
				inn_code
			) c
			ON b.meter_id = c.meter_id
			where
				a.meter_id = #{meterId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectAvgByCode" resultMap="BaseResultMap" parameterType="java.lang.String">
  			SELECT
				a.cmd_code cmd_code,
				a.data_name data_name,
				FORMAT(s_avg/1000,2) successAvg,
				FORMAT(f_avg/1000,2) failAvg,
				FORMAT(t_avg/1000,2) timeoutAvg
			FROM
			(SELECT
				cmd_code,
				meter_id,
				inn_code,
				data_name,
				AVG(use_time) s_avg
			FROM
				t_base_inn_exe
			WHERE
				`status` = '1'
			GROUP BY
				meter_id
			) a
			left JOIN
			(SELECT
				meter_id,
				data_name,
				AVG(use_time) f_avg
			FROM
				t_base_inn_exe
			WHERE
				`status` = '2'
			GROUP BY
				meter_id
			) b
			ON a.meter_id = b.meter_id 
			LEFT JOIN
			(SELECT
				meter_id,
				data_name,
				AVG(use_time) t_avg
			FROM
				t_base_inn_exe
			WHERE
				`status` = '3'
			GROUP BY
				meter_id
			) c
			ON b.meter_id = c.meter_id
			WHERE
				a.cmd_code = #{cmdCode,jdbcType=VARCHAR}
			GROUP BY
			a.inn_code
  </select>
</mapper>