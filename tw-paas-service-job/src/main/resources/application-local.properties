spring.application.name=service-job
eureka.client.serviceUrl.defaultZone=http://localhost:2000/eureka/
eureka.instance.prefer-ip-address=true
management.security.enabled=false
management.health.redis.enabled=false



#定时任务配置
#elastic.zookeeper.server-lists=192.168.20.104:2181
#elaticjob.zookeeper.namespace=elastic-job

#定时任务相关日志配置的数据库
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://192.168.20.102:3306/Elastic-data?useUnicode\=true&characterEncoding\=utf-8
#spring.datasource.url=jdbc:mysql://101.132.42.222:3306/paas?useUnicode\=true&characterEncoding\=utf-8
#spring.datasource.username=root
#spring.datasource.password=ENC(eS+Qv7wolcEFFy/diQG4kQ==)
#spring.datasource.password=Tw027
#jasypt.encryptor.password=asdasdasdasdasd

# \u4E0B\u9762\u4E3A\u8FDE\u63A5\u6C60\u7684\u8865\u5145\u8BBE\u7F6E\uFF0C\u5E94\u7528\u5230\u4E0A\u9762\u6240\u6709\u6570\u636E\u6E90\u4E2D
# \u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u6700\u5C0F\uFF0C\u6700\u5927
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
# \u914D\u7F6E\u83B7\u53D6\u8FDE\u63A5\u7B49\u5F85\u8D85\u65F6\u7684\u65F6\u95F4
#spring.datasource.maxWait=60000
# \u914D\u7F6E\u95F4\u9694\u591A\u4E45\u624D\u8FDB\u884C\u4E00\u6B21\u68C0\u6D4B\uFF0C\u68C0\u6D4B\u9700\u8981\u5173\u95ED\u7684\u7A7A\u95F2\u8FDE\u63A5\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2 
#spring.datasource.timeBetweenEvictionRunsMillis=60000
# \u914D\u7F6E\u4E00\u4E2A\u8FDE\u63A5\u5728\u6C60\u4E2D\u6700\u5C0F\u751F\u5B58\u7684\u65F6\u95F4\uFF0C\u5355\u4F4D\u662F\u6BEB\u79D2 
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
# \u6253\u5F00PSCache\uFF0C\u5E76\u4E14\u6307\u5B9A\u6BCF\u4E2A\u8FDE\u63A5\u4E0APSCache\u7684\u5927\u5C0F 
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# \u914D\u7F6E\u76D1\u63A7\u7EDF\u8BA1\u62E6\u622A\u7684filters\uFF0C\u53BB\u6389\u540E\u76D1\u63A7\u754C\u9762sql\u65E0\u6CD5\u7EDF\u8BA1\uFF0C'wall'\u7528\u4E8E\u9632\u706B\u5899 
#spring.datasource.filters=stat,wall,log4j
# \u901A\u8FC7connectProperties\u5C5E\u6027\u6765\u6253\u5F00mergeSql\u529F\u80FD\uFF1B\u6162SQL\u8BB0\u5F55
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# \u5408\u5E76\u591A\u4E2ADruidDataSource\u7684\u76D1\u63A7\u6570\u636E
#spring.datasource.useGlobalDataSourceStat=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.database=MYSQL

#config of server
server.port: 8086
server.context-path: /
server.session.timeout:1800
#log config
logging.level.cn.com=DEBUG
logging.file=logs/job.log  
logging.level=debug  

#kafka config
spring.kafka.bootstrap-servers=192.168.20.103:9092
#spring.kafka.consumer.group-id=defautgroup
#spring.kafka.consumer.auto-offset-reset=earliest
#\u901A\u4FE1\u4E2D\u95F4\u4EF6\u91C7\u96C6\u6570\u636E\u4E0A\u62A5mq\u961F\u5217\u540D\u79F0
mq.queue.meter.data=dev.queue.meter.data


#gateway config
mediserver.ethernet=http://192.168.20.111:8083/model1/contr
mediserver.gprs=http://192.168.20.111:9084/model1/contr
mediserver.LoRaWan=http://192.168.20.111:9084/model1/contr
mediserver.Wi-Fi=""
mediserver.NB-IoT=""
mediserver.modbus=http://192.168.20.111:8074/model1/contr

mediserver.dtu=""


#gateway http request timeout 
#485
engine.timeout.elec.rs485=20000
engine.timeout.water.rs485=30000
#gprs
engine.timeout.elec.platform=35000
engine.timeout.water.platform=50000
#rolawan
engine.timeout.elec.directc=35000
engine.timeout.water.directc=50000
#alirolawan
engine.timeout.elec.rolawan=35000
engine.timeout.water.rolawan=50000
engine.timeout.hot.rolawan=50000


#################redis config#################
#每次扫描的游标间隔，加大可以加快扫描速度和增加CPU负担
service.redisscan.count = 1000
#扫描间隔时间 单位秒
service.redisscan.sleep=10

spring.redis.database=0
spring.redis.host=192.168.20.111
#spring.redis.host=127.0.0.1
spring.redis.password=
spring.redis.port=6379
# redis timeout
spring.redis.timeout=3000

#################redis线程池设置#################
# 连接池中的最大空闲连接，默认值是8。
#spring.redis.pool.max-idle=500
#连接池中的最小空闲连接，默认值是0。
#spring.redis.pool.min-idle=0
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
#spring.redis.pool.max-active=2000
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
#spring.redis.pool.max-wait=1000


#################redis\u54E8\u5175\u8BBE\u7F6E#################
# Redis\u670D\u52A1\u5668master\u7684\u540D\u5B57
#spring.redis.sentinel.master=master8026
# redis-sentinel\u7684\u914D\u7F6E\u5730\u5740\u548C\u7AEF\u53E3
#spring.redis.sentinel.nodes=10.189.80.25:26379,10.189.80.26:26379,10.189.80.27:26378